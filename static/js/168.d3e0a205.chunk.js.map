{"version":3,"file":"static/js/168.d3e0a205.chunk.js","mappings":"uKACA,MAA+B,6B,kBCmB/B,EAjBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,sDCjBD,MAAyB,uBAAzB,EAA0D,wBAA1D,EAAyF,qB,SCgBzF,EAde,YAA8B,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAClC,OACE,iBAAKX,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA6BS,KAC7B,cAAGV,UAAWC,EAAd,SAAyBU,MAG9B,C,sGCTD,EAA0B,yBAA1B,EAAkE,8B,sCC8ClE,EAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAWQ,EAAKC,QAA9B,IACLC,OAAM,SAAAC,GAAK,OAAIC,OAAOC,MAAMF,EAAjB,IACXG,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,iBAAKjB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGY,EAAQgB,OAAS,EAChBhB,EAAQiB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,yBACE,SAACC,EAAA,EAAD,CAAiBxB,QAAO,kBAAaqB,GAAUpB,KAAMqB,GAAxCC,IADNA,EAIZ,KAED,yBACE,SAACC,EAAA,EAAD,CACExB,QAAQ,WACRC,KAAK,iDAMZI,IAAa,SAACoB,EAAA,EAAD,MAGnB,C,6MC3CKC,EAAW,+BACXC,EAAe,CACnBC,QAAS,mCACTC,SAAU,SAGCC,EAAgB,mCAAG,qGACPC,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,uBAAmC,CAC7DM,OAAQL,IAFoB,cACxBM,EADwB,yBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAuB,mCAAG,WAAgBC,GAAhB,wFACdJ,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,iBAA6B,CACvDM,QAAO,QAAGG,MAAAA,GAAUR,KAFe,cAC/BM,EAD+B,yBAI9BA,GAJ8B,2CAAH,sDAOvBG,EAAe,mCAAG,WAAgB7B,GAAhB,wFACJwB,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBnB,GAAW,CAACyB,QAAO,QAAEzB,QAAAA,GAAYoB,KADxD,cACrBM,EADqB,yBAEpBA,GAFoB,2CAAH,sDAKfvB,EAAe,mCAAG,WAAgBH,GAAhB,wFACJwB,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBnB,EAAtB,YAAyC,CAACyB,QAAO,QAAEzB,QAAAA,GAAYoB,KADhE,cACrBM,EADqB,yBAEpBA,GAFoB,2CAAH,sDAKfI,EAAY,mCAAG,WAAgB9B,GAAhB,wFACDwB,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBnB,EAAtB,YAAyC,CAACyB,QAAO,QAAEzB,QAAAA,GAAYoB,KADnE,cAClBM,EADkB,yBAEjBA,GAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Poster/Poster.module.css?d130","components/Poster/Poster.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","functions/clientAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader-thumb\":\"Loader_loader-thumb__JoWOU\"};","import css from './Loader.module.css';\nimport { Grid } from 'react-loader-spinner';\n\nconst Loader = function () {\n  return (\n    <div className={css['loader-thumb']}>\n      <Grid\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Poster_poster__evSwE\",\"heading\":\"Poster_heading__IYF-W\",\"text\":\"Poster_text__K242I\"};","import css from './Poster.module.css';\nimport PropTypes from 'prop-types';\n\nconst Poster = function ({ heading, text }) {\n  return (\n    <div className={css.poster}>\n      <h2 className={css.heading}>{heading}</h2>\n      <p className={css.text}>{text}</p>\n    </div>\n  );\n};\n\nPoster.propTypes = {\n  heading: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Poster;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"reviews-list\":\"Reviews_reviews-list__NMiNJ\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\nimport Poster from 'components/Poster/Poster';\nimport { getMovieReviews } from 'functions/clientAPI';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = function () {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId)\n      .then(({ data }) => setReviews(data.results))\n      .catch(error => window.alert(error))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <div className={css.reviews}>\n      <ul className={css['reviews-list']}>\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <Poster key={id} heading={`Author: ${author}`} text={content} />\n              </li>\n            );\n          })\n        ) : (\n          <li>\n            <Poster\n              heading=\"Sorry...\"\n              text=\"We don't have any reviews for this movie\"\n            />\n          </li>\n        )}\n      </ul>\n\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst searchParams = {\n  api_key: '53cf71a9dc9d51d5f353ddcd73e301a4',\n  language: 'en-US',\n};\n\nexport const getPopularMovies = async function () {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: searchParams,\n  });\n  return response;\n};\n\nexport const getMoviesBySearchQuerry = async function (query) {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: { query, ...searchParams },\n  });\n  return response;\n};\n\nexport const getMovieDetails = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieReviews = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieCast = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {params: {movieId, ...searchParams}});\n    return response;\n}\n"],"names":["className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","heading","text","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieReviews","then","data","results","catch","error","window","alert","finally","length","map","author","content","id","Poster","Loader","BASE_URL","searchParams","api_key","language","getPopularMovies","axios","params","response","getMoviesBySearchQuerry","query","getMovieDetails","getMovieCast"],"sourceRoot":""}