{"version":3,"file":"static/js/76.a40eba48.chunk.js","mappings":"qNACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAA0F,wBAA1F,EAA+H,yBAA/H,EAAoK,wB,+CCiDpK,EA1Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAaH,GACVI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAQQ,EAAKT,KAA3B,IACLU,OAAM,SAAAC,GAAK,OAAIC,OAAOC,MAAMF,EAAjB,IACXG,SAAQ,kBAAMX,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,iBAAKW,UAAWC,EAAhB,UACGhB,IACC,eAAIe,UAAWC,EAAf,SACGhB,EAAKiB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,gBAAaN,UAAWC,EAAxB,UACGK,GACC,gBACEN,UAAWC,EACXM,IAAG,yCAAoCD,GACvCE,IAAKH,KAGP,SAAC,MAAD,CAAYL,UAAWC,KAEzB,SAACQ,EAAA,EAAD,CAAQC,QAASL,EAAMM,KAAI,qBAAgBR,OAVpCC,EAaZ,MAIJjB,IAAa,SAACyB,EAAA,EAAD,MAGnB,C,uDC/CD,MAA+B,6B,kBCmB/B,EAjBe,WACb,OACE,gBAAKZ,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEY,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,sDCjBD,MAAyB,uBAAzB,EAA0D,wBAA1D,EAAyF,qB,SCgBzF,EAde,YAA8B,IAAlBV,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAClC,OACE,iBAAKX,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA6BS,KAC7B,cAAGV,UAAWC,EAAd,SAAyBU,MAG9B,C,6MCRKU,EAAW,+BACXC,EAAe,CACnBC,QAAS,mCACTC,SAAU,SAGCC,EAAgB,mCAAG,qGACPC,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,uBAAmC,CAC7DM,OAAQL,IAFoB,cACxBM,EADwB,yBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAuB,mCAAG,WAAgBC,GAAhB,wFACdJ,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,iBAA6B,CACvDM,QAAO,QAAGG,MAAAA,GAAUR,KAFe,cAC/BM,EAD+B,yBAI9BA,GAJ8B,2CAAH,sDAOvBG,EAAe,mCAAG,WAAgB1C,GAAhB,wFACJqC,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBhC,GAAW,CAACsC,QAAO,QAAEtC,QAAAA,GAAYiC,KADxD,cACrBM,EADqB,yBAEpBA,GAFoB,2CAAH,sDAKfI,EAAe,mCAAG,WAAgB3C,GAAhB,wFACJqC,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBhC,EAAtB,YAAyC,CAACsC,QAAO,QAAEtC,QAAAA,GAAYiC,KADhE,cACrBM,EADqB,yBAEpBA,GAFoB,2CAAH,sDAKfpC,EAAY,mCAAG,WAAgBH,GAAhB,wFACDqC,EAAAA,EAAAA,GAAM,GAAD,OAAIL,EAAJ,kBAAsBhC,EAAtB,YAAyC,CAACsC,QAAO,QAAEtC,QAAAA,GAAYiC,KADnE,cAClBM,EADkB,yBAEjBA,GAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Poster/Poster.module.css?d130","components/Poster/Poster.jsx","functions/clientAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"cast-list\":\"Cast_cast-list__ond-A\",\"cast-item\":\"Cast_cast-item__6xvgR\",\"cast-image\":\"Cast_cast-image__Lf-J8\",\"image-off\":\"Cast_image-off__C-1sG\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { getMovieCast } from 'functions/clientAPI';\nimport { CiImageOff } from 'react-icons/ci';\nimport Poster from 'components/Poster/Poster';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = function () {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCast(movieId)\n      .then(({ data }) => setCast(data.cast))\n      .catch(error => window.alert(error))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <div className={css.cast}>\n      {cast && (\n        <ul className={css['cast-list']}>\n          {cast.map(({ character, id, name, profile_path }) => {\n            return (\n              <li key={id} className={css['cast-item']}>\n                {profile_path ? (\n                  <img\n                    className={css['cast-image']}\n                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  <CiImageOff className={css['image-off']} />\n                )}\n                <Poster heading={name} text={`Character: ${character}`} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader-thumb\":\"Loader_loader-thumb__JoWOU\"};","import css from './Loader.module.css';\nimport { Grid } from 'react-loader-spinner';\n\nconst Loader = function () {\n  return (\n    <div className={css['loader-thumb']}>\n      <Grid\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Poster_poster__evSwE\",\"heading\":\"Poster_heading__IYF-W\",\"text\":\"Poster_text__K242I\"};","import css from './Poster.module.css';\nimport PropTypes from 'prop-types';\n\nconst Poster = function ({ heading, text }) {\n  return (\n    <div className={css.poster}>\n      <h2 className={css.heading}>{heading}</h2>\n      <p className={css.text}>{text}</p>\n    </div>\n  );\n};\n\nPoster.propTypes = {\n  heading: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Poster;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst searchParams = {\n  api_key: '53cf71a9dc9d51d5f353ddcd73e301a4',\n  language: 'en-US',\n};\n\nexport const getPopularMovies = async function () {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: searchParams,\n  });\n  return response;\n};\n\nexport const getMoviesBySearchQuerry = async function (query) {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: { query, ...searchParams },\n  });\n  return response;\n};\n\nexport const getMovieDetails = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieReviews = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieCast = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {params: {movieId, ...searchParams}});\n    return response;\n}\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieCast","then","data","catch","error","window","alert","finally","className","css","map","character","id","name","profile_path","src","alt","Poster","heading","text","Loader","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","BASE_URL","searchParams","api_key","language","getPopularMovies","axios","params","response","getMoviesBySearchQuerry","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}