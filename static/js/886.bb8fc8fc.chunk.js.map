{"version":3,"file":"static/js/886.bb8fc8fc.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Heading/Heading.module.css?4d39","components/Heading/Heading.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Poster/Poster.module.css?d130","components/Poster/Poster.jsx","functions/clientAPI.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","webpack://goit-react-hw-05-movies/./src/components/ButtonLink/ButtonLink.module.css?da06","components/ButtonLink/ButtonLink.jsx","components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/GoBackLink/GoBackLink.module.css?ade3","components/GoBackLink/GoBackLink.jsx","pages/MovieInfo.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Heading_heading__f8N4J\"};","import css from './Heading.module.css';\nimport PropTypes from 'prop-types';\n\nconst Heading = function ({ text }) {\n  return <h1 className={css.heading}>{text}</h1>;\n};\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader-thumb\":\"Loader_loader-thumb__JoWOU\"};","import css from './Loader.module.css';\nimport { Grid } from 'react-loader-spinner';\n\nconst Loader = function () {\n  return (\n    <div className={css['loader-thumb']}>\n      <Grid\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Poster_poster__evSwE\",\"heading\":\"Poster_heading__IYF-W\",\"text\":\"Poster_text__K242I\"};","import css from './Poster.module.css';\nimport PropTypes from 'prop-types';\n\nconst Poster = function ({ heading, text }) {\n  return (\n    <div className={css.poster}>\n      <h2 className={css.heading}>{heading}</h2>\n      <p className={css.text}>{text}</p>\n    </div>\n  );\n};\n\nPoster.propTypes = {\n  heading: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Poster;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst searchParams = {\n  api_key: '53cf71a9dc9d51d5f353ddcd73e301a4',\n  language: 'en-US',\n};\n\nexport const getPopularMovies = async function () {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: searchParams,\n  });\n  return response;\n};\n\nexport const getMoviesBySearchQuerry = async function (query) {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: { query, ...searchParams },\n  });\n  return response;\n};\n\nexport const getMovieDetails = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieReviews = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {params: {movieId, ...searchParams}});\n    return response;\n}\n\nexport const getMovieCast = async function (movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {params: {movieId, ...searchParams}});\n    return response;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movie-info\":\"MovieDetails_movie-info__hLhDZ\",\"info\":\"MovieDetails_info__0TKY1\",\"additinal-info\":\"MovieDetails_additinal-info__yDhTy\",\"buttons-thumb\":\"MovieDetails_buttons-thumb__lMUSD\",\"no-image\":\"MovieDetails_no-image__sA1V4\"};","// extracted by mini-css-extract-plugin\nexport default {\"link-button\":\"ButtonLink_link-button__He9mW\"};","import css from './ButtonLink.module.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ButtonLink = function ({ text, path }) {\n  return (\n    <Link className={css['link-button']} to={path}>\n      {text}\n    </Link>\n  );\n};\n\nButtonLink.propTypes = {\n  text: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default ButtonLink;\n","import css from './MovieDetails.module.css';\nimport { CiImageOff } from 'react-icons/ci';\nimport Poster from 'components/Poster/Poster';\nimport ButtonLink from 'components/ButtonLink/ButtonLink';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = function ({ imagePath, title, score, overview, genres }) {\n  return (\n    <div className={css['movie-info']}>\n      {imagePath ? (\n        <img src={`https://image.tmdb.org/t/p/w500${imagePath}`} alt={title} width={500} height={750}/>\n      ) : (\n        <CiImageOff className={css['no-image']} />\n      )}\n      <div className={css.info}>\n        <div>\n          <Poster heading={`Original title`} text={title} />\n          <Poster heading={`User's score`} text={`${score} %`} />\n          <Poster heading={`Overview`} text={overview} />\n          <Poster heading={`Genres`} text={genres.join(', ')} />\n        </div>\n        <div className={css['additional-info']}>\n          <h2>Additional information</h2>\n          <div className={css['buttons-thumb']}>\n            <ButtonLink text=\"Cast\" path=\"cast\" />\n            <ButtonLink text=\"Rewiews\" path=\"reviews\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  imagePath: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"go-back-link\":\"GoBackLink_go-back-link__LsTuL\",\"link-anchor\":\"GoBackLink_link-anchor__g7VSO\"};","import { Link } from 'react-router-dom';\nimport css from './GoBackLink.module.css';\nimport { BsFillArrowLeftSquareFill } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\nconst GoBackLink = function ({ path }) {\n  return (\n    <Link className={css['go-back-link']} to={path?.current?.from ?? '/'}>\n      <BsFillArrowLeftSquareFill />\n      <span className={css['link-anchor']}>Go Back</span>\n    </Link>\n  );\n};\n\nGoBackLink.propTypes = {\n  path: PropTypes.shape({\n    current: PropTypes.shape({\n      from: PropTypes.object,\n    }),\n  }).isRequired,\n};\n\nexport default GoBackLink;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'functions/clientAPI';\nimport Heading from 'components/Heading/Heading';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\nimport GoBackLink from 'components/GoBackLink/GoBackLink';\n\nconst MovieInfo = function () {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [releaseYear, setReleaseYear] = useState('');\n  const [imagePath, setImagePath] = useState('');\n  const [originalTitle, setOriginalTitle] = useState('');\n  const [usersScore, setUsersScore] = useState(0);\n  const [movieOverview, setMovieOverview] = useState('');\n  const [genresList, setGenresList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(\n        ({\n          data: {\n            title,\n            release_date,\n            poster_path,\n            original_title,\n            popularity,\n            overview,\n            genres,\n          },\n        }) => {\n          setMovieTitle(title);\n          setOriginalTitle(original_title);\n          setReleaseYear(release_date.slice(0, 4));\n          setImagePath(`https://image.tmdb.org/t/p/w500${poster_path}`);\n          setUsersScore(Math.round(popularity));\n          setMovieOverview(overview);\n          setGenresList(genres.map(({ name }) => name));\n        }\n      )\n      .catch(error => window.alert(error))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  const { state } = useLocation();\n  const savedLocation = useRef(state);\n\n  return (\n    <>\n      <GoBackLink path={savedLocation} />\n      {movieTitle && <Heading text={`${movieTitle} (${releaseYear})`} />}\n      {imagePath &&\n        originalTitle &&\n        usersScore &&\n        movieOverview &&\n        genresList && (\n          <MovieDetails\n            imagePath={imagePath}\n            title={originalTitle}\n            score={usersScore}\n            overview={movieOverview}\n            genres={genresList}\n          />\n        )}\n      {isLoading && <Loader />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["text","className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","heading","BASE_URL","searchParams","api_key","language","getPopularMovies","axios","params","response","getMoviesBySearchQuerry","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","path","to","imagePath","title","score","overview","genres","src","alt","Poster","join","current","from","useState","movieTitle","setMovieTitle","releaseYear","setReleaseYear","setImagePath","originalTitle","setOriginalTitle","usersScore","setUsersScore","movieOverview","setMovieOverview","genresList","setGenresList","isLoading","setIsLoading","useParams","useEffect","then","data","release_date","poster_path","original_title","popularity","slice","Math","round","map","name","catch","error","window","alert","finally","state","useLocation","savedLocation","useRef","Heading","Loader"],"sourceRoot":""}